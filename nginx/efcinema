server {
    listen 443 ssl http2;
    server_name efcinema.com;

    send_timeout 100m; #Some players don't reopen a socket and playback stops totally instead of resuming after an extended pause (e.g. Chrome)

    ssl_certificate /config/keys/efcinema/star_efcinema_com.pem;
    ssl_certificate_key /config/keys/efcinema/efcinema_com.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-#SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GC#M-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA#-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SH#A384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-A#ES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA#-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AE#S256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:D#ES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-S#HA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /config/keys/efcinema/star_efcinema_com.pem;
    ssl_session_tickets on;

    access_log            /config/log/nginx/efcinema.com.access.log;
    error_log             /config/log/nginx/efcinema.com.error.log;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
    gzip_disable "MSIE [1-6]\.";

    client_max_body_size 100M;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Accept-Encoding "";

    proxy_redirect off;
    proxy_buffering off;

    location ~ ^.+?\.php(/.*)?$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location / {
        set $organizr organizr;
        proxy_pass http://$organizr;
    }

   # location /images {
   #     alias            /config/www/nickflix.io/images;
   # }

   # location /forbidden {
   #     alias            /config/www/nickflix.io/forbidden;
   # }

#    location /speed {
#        alias            /config/www/speedtest/;
#
#        access_log      /config/log/nginx/speed.access.log;
#        error_log       /config/log/nginx/speed.error.log;
#
#        location ~* \.php$ {
#            fastcgi_pass 127.0.0.1:9000;
#            fastcgi_split_path_info ^(.+\.php)(/.*)$;
#            fastcgi_param PATH_INFO $fastcgi_path_info;
#            include fastcgi_params;
#            fastcgi_param SCRIPT_FILENAME $request_filename;
#        }
#    }
#
#    location /unifi {
#        alias            /config/www/unifi/;
#
#        index index.php;
#
#        access_log      /config/log/nginx/unifi.access.log;
#        error_log       /config/log/nginx/unifi.error.log;
#
#        location ~* \.php$ {
#            fastcgi_pass 127.0.0.1:9000;
#            fastcgi_split_path_info ^(.+\.php)(/.*)$;
#            fastcgi_param PATH_INFO $fastcgi_path_info;
#            include fastcgi_params;
#            fastcgi_param SCRIPT_FILENAME $request_filename;
#        }
#    }

    location /deluge {
        set $deluge deluge;
        proxy_pass          http://$deluge:8112/;

        proxy_set_header    X-Deluge-Base "/deluge/";
        proxy_hide_header X-Frame-Options;

        access_log      /config/log/nginx/deluge.access.log;
        error_log       /config/log/nginx/deluge.error.log;

        #include includes/internal_only_ips;
        #deny all;
}

    location /tautulli {
        set $tautulli tautulli;
        proxy_pass          http://$tautulli:8181;

        access_log      /config/log/nginx/tautulli.access.log;
        error_log       /config/log/nginx/tautulli.error.log;
    }

    location /sonarr {
        set $sonarr sonarr;
        proxy_pass          http://$sonarr:8989;

        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/orgarr.css">
        </head>';
        sub_filter_once on;

        access_log      /config/log/nginx/sonarr.access.log;
        error_log       /config/log/nginx/sonarr.error.log;

       # include includes/internal_only_ips;
       # deny all;
    }

#    location /sonarr4k {
#        set $sonarr4k sonarr4k;
#        proxy_pass          http://$sonarr4k:8989;
#
#        proxy_set_header Accept-Encoding "";
#        sub_filter
#        '</head>'
#        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/orgarr.css">
#        </head>';
#        sub_filter_once on;
#
#        access_log      /config/log/nginx/sonarr4k.access.log;
#        error_log       /config/log/nginx/sonarr4k.error.log;
#
#        include includes/internal_only_ips;
#        deny all;
#    }

    location /radarr {
        set $radarr radarr;
        proxy_pass          http://$radarr:7878;

        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/orgarr.css">
        </head>';
        sub_filter_once on;

        access_log      /config/log/nginx/radarr.access.log;
        error_log       /config/log/nginx/radarr.error.log;

        #include includes/internal_only_ips;
        #deny all;
    }

#    location /radarr4k {
#        set $radarr4k radarr4k;
#        proxy_pass          http://$radarr4k:7878;
#
#        proxy_set_header Accept-Encoding "";
#        sub_filter
#        '</head>'
#        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/orgarr.css">
#        </head>';
#        sub_filter_once on;
#
#        access_log      /config/log/nginx/radarr4k.access.log;
#        error_log       /config/log/nginx/radarr4k.error.log;
#
#        include includes/internal_only_ips;
#        deny all;
#    }

    location /jackett {
        set $jackett jackett;
        proxy_pass          http://$jackett:9117;

        access_log      /config/log/nginx/jackett.access.log;
        error_log       /config/log/nginx/jackett.error.log;

        #include includes/internal_only_ips;
        #deny all;
    }

    location /ombi {
        set $ombi ombi;
        proxy_pass          http://$ombi:3579;

        proxy_set_header Connection keep-alive;
        proxy_cache_bypass $http_upgrade;

        access_log      /config/log/nginx/ombi.access.log;
        error_log       /config/log/nginx/ombi.error.log;
    }

    location /plex {
	    set $plex plex;
        proxy_pass          http://$plex:32400;

        proxy_set_header Accept-Encoding "";
        sub_filter
        '</head>'
        '<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/plexorg.css">
        </head>';
        sub_filter_once on;

        access_log      /config/log/nginx/plex.access.log;
        error_log       /config/log/nginx/plex.error.log;
    }
    if ($http_referer ~* /plex/) {
        rewrite ^/web/(.*) /plex/web/$1? redirect;
    }
	
}

